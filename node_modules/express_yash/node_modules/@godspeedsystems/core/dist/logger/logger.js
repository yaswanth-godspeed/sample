"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.logger = void 0;
/*
* You are allowed to study this software for learning and local * development purposes only. Any other use without explicit permission by Mindgrep, is prohibited.
* Â© 2022 Mindgrep Technologies Pvt Ltd
*/
const pino_1 = __importDefault(require("pino"));
const config_1 = __importDefault(require("config"));
const configRedact = config_1.default.redact || [];
let redactAttrs = [];
for (const redactAttr of configRedact) {
    if (redactAttr.match(/^\*\*/)) {
        const fieldName = redactAttr.replace(/^\*\*\./, '');
        redactAttrs.push(`${fieldName}`, `*.${fieldName}`, `*.*.${fieldName}`, `*.*.*.${fieldName}`, `*.*.*.*.${fieldName}`, `*.*.*.*.*.${fieldName}`, `*.*.*.*.*.*.${fieldName}`, `*.*.*.*.*.*.*.${fieldName}`, `*.*.*.*.*.*.*.*.${fieldName}`, `*.*.*.*.*.*.*.*.*.${fieldName}`);
    }
    else {
        redactAttrs.push(redactAttr);
    }
}
const logger = (0, pino_1.default)({
    level: config_1.default.log_level || 'info',
    transport: {
        // target: '../pino/pino-opentelemetry-transport',
        target: "pino-pretty",
        options: {
            destination: 1,
            Resource: {
                'service.name': process.env.OTEL_SERVICE_NAME || 'unknown_service:node',
                env: process.env.NODE_ENV
            }
        }
    },
    redact: {
        paths: redactAttrs,
        censor: '*****'
    }
});
exports.logger = logger;
//# sourceMappingURL=logger.js.map