"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/*
* You are allowed to study this software for learning and local * development purposes only. Any other use without explicit permission by Mindgrep, is prohibited.
* Â© 2022 Mindgrep Technologies Pvt Ltd
*/
const config_1 = __importDefault(require("config"));
const mappingLoader_1 = __importDefault(require("./mappingLoader"));
const logger_1 = require("../logger");
const mappings = (0, mappingLoader_1.default)();
function substitute(value) {
    try {
        if (value.match(/<(.*?)%/)) {
            logger_1.logger.debug('value before %s', value);
            let script = value.replace(/"?<(.*?)%\s*(.*?)\s*%>"?/, '$2');
            //TODO: pass other context variables
            value = Function('config', 'mappings', 'return ' + script)(config_1.default, mappings);
            logger_1.logger.debug('value after %s', value);
        }
    }
    catch (ex) {
        //console.error(ex);
    }
    return value;
}
function compileScript(args) {
    if (!args) {
        return args;
    }
    if (typeof (args) == 'object') {
        if (!Array.isArray(args)) {
            let out = {};
            for (let k in args) {
                out[k] = compileScript(args[k]);
            }
            return out;
        }
        else {
            let out = [];
            for (let k in args) {
                out[k] = compileScript(args[k]);
            }
            return out;
        }
    }
    else if (typeof (args) == 'string') {
        return substitute(args);
    }
    return args;
}
exports.default = compileScript;
//# sourceMappingURL=expandVariables.js.map