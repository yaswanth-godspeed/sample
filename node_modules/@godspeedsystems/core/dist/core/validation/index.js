"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isValidWorkflow = exports.isValidEvent = void 0;
const ajv_1 = __importDefault(require("ajv"));
const ajv_formats_1 = __importDefault(require("ajv-formats"));
const event_schema_json_1 = __importDefault(require("./event.schema.json"));
const workflow_schema_json_1 = __importDefault(require("./workflow.schema.json"));
const logger_1 = require("../../logger");
const ajvInstance = new ajv_1.default({ allErrors: true, coerceTypes: true, strictTuples: false, strictTypes: false, strict: false });
(0, ajv_formats_1.default)(ajvInstance);
require('ajv-errors')(ajvInstance);
const validateEvent = ajvInstance.compile(event_schema_json_1.default);
const validateWorkflow = ajvInstance.compile(workflow_schema_json_1.default);
const isValidEvent = (event, eventKey) => {
    if (!validateEvent(event)) {
        logger_1.logger.error('Event validation failed for %s', eventKey);
        logger_1.logger.error(validateEvent.errors);
        return false;
    }
    return true;
};
exports.isValidEvent = isValidEvent;
const isValidWorkflow = (workflow, workflowKey) => {
    if (!validateWorkflow(workflow)) {
        logger_1.logger.error('Workflow validation failed for %s', workflowKey);
        logger_1.logger.error(validateWorkflow.errors);
        return false;
    }
    return true;
};
exports.isValidWorkflow = isValidWorkflow;
exports.default = ajvInstance;
//# sourceMappingURL=index.js.map