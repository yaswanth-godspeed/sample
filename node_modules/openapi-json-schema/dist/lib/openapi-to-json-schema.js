"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openApiToJsonSchemaType = void 0;
const utils_1 = require("./utils");
function openApiTypeToJsonSchema7Type(type, nullable) {
    if (typeof type === "undefined" || type === "any")
        return undefined; // Any-type includes null
    else if (!Array.isArray(type))
        return (type === "null" || !nullable)
            ? type
            : [type, "null"];
    else {
        if (type.includes("any"))
            return undefined; // Any-type includes null
        if (!type.includes("null") && nullable)
            type.push("null");
        if (type.length === 1)
            return type[0];
        return type;
    }
}
function openApiToJsonSchema7Ref(node) {
    if (node.$ref)
        return {
            ...node,
            $ref: (0, utils_1.encodeRefNameJsonSchema)((0, utils_1.decodeRefNameOpenApi)(node.$ref)),
        };
    return node;
}
function openApiToJsonSchemaType(schema) {
    if (typeof schema === 'boolean')
        return schema;
    const { type: _type, nullable, ...rest } = schema;
    const type = openApiTypeToJsonSchema7Type(_type, nullable);
    let output = { ...rest, ...(type ? { type } : {}) };
    output = openApiToJsonSchema7Ref(output);
    return (0, utils_1.recurseSchema)(output, openApiToJsonSchemaType);
}
exports.openApiToJsonSchemaType = openApiToJsonSchemaType;
