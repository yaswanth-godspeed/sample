"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.openApiToJsonSchema = exports.jsonSchemaDocumentToOpenApi = exports.decorateOpenApi = void 0;
const json_schema_to_openapi_1 = require("./json-schema-to-openapi");
const openapi_to_json_schema_1 = require("./openapi-to-json-schema");
function decorateOpenApi(schema, { title, version, schemaVersion = '3.0.0', }) {
    const info = { title, version };
    if (schema.$id) {
        info['x-id'] = schema.$id;
        delete schema.$id;
    }
    if (schema.$comment) {
        info['x-comment'] = schema.$comment;
        delete schema.$comment;
    }
    delete schema.$schema;
    return {
        openapi: schemaVersion,
        info,
        paths: {},
        ...schema,
    };
}
exports.decorateOpenApi = decorateOpenApi;
function jsonSchemaDocumentToOpenApi(schema, options) {
    const { definitions = {}, ...rest } = schema;
    return decorateOpenApi({
        ...rest,
        components: {
            schemas: Object.fromEntries(Object.entries(definitions).map(([name, schema]) => [name, (0, json_schema_to_openapi_1.jsonSchemaTypeToOpenApi)(schema)])),
        },
    }, options);
}
exports.jsonSchemaDocumentToOpenApi = jsonSchemaDocumentToOpenApi;
function openApiToJsonSchema(openApi) {
    const schemas = openApi.components.schemas;
    return {
        definitions: Object.fromEntries(Object.keys(schemas).map(key => [
            key,
            (0, openapi_to_json_schema_1.openApiToJsonSchemaType)(schemas[key])
        ]))
    };
}
exports.openApiToJsonSchema = openApiToJsonSchema;
